/* 
double pow(double base, double exp) : 부동 소수점 방식, 오차가 발생할 수 있다. 따라서 정수로 저장해야 한다.
컴퓨터에서 실수를 표현하는 방식은 고정 소수점 방식과 부동 소수점 방식이 있다.

고정 소수점 : 소수부의 자릿수를 미리 정하고 고정된 자릿수의 소수를 표현한다.
부호 비트 (1 bit) + 정수부 (15 bit) + 소수부 (16 bit)

부동 소수점 : 소수점의 위치를 고정하지 않고 그 위치를 나타내는 수를 따로 적는다. 유효 숫자를 나타내는 가수와 소수점의 위치를 풀이하는 지수로 나누어 표현한다.
부호 비트 (1 bit) + 지수부 (8 bit) + 가수부 (23 bit)

먼저 10진법을 2진법으로 바꾸고 -> 이 상태 그대로 저장하면 고정 소수점 방식
정규화 이후 가수부, 지수부로 나누어 계산해 저장하는 방식이 부동 소수점 방식

정규화 : 정수부를 1로 맞추어 놓고 적절하게 소숫점 위치를 조정하는 일

소수의 10진법을 2진법으로 바꾸어 저장하는 과정에서 순환 소수같이 무한이 길어지는 숫자가 나오면 오차가 발생하게 된다.
-> 이런 오차 부분은 메모리에 다 담지 못하기에 정확한 값이 저장되는 것이 아니다.
*/

#include <iostream>
#include <math.h>

int main()
{
    int N;
    std::cin >> N;

    std::cout << (int)(pow(2,N)+1)*(int)(pow(2,N)+1);
}